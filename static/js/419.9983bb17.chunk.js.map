{"version":3,"file":"static/js/419.9983bb17.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"button\":\"ContactItem_button__IRFBz\"};","import { useDispatch } from 'react-redux';\nimport {deleteContact} from '../../redux/contacts/operations';\nimport css from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={css.item}>\n      {name}: {number}\n      <button className={css.button} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","export const selectItems = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Hearts } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <Hearts\n      height=\"60\"\n      width=\"60\"\n      color=\"#de0505\"\n      ariaLabel=\"hearts-loading\"\n      wrapperStyle={{}}\n      wrapperClass={css.loader}\n      visible={true}\n    />\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport ContactItem from '../ContactItem/ContactItem';\nimport {\n  selectItems,\n  selectIsLoading,\n  selectError,\n  selectFilter,\n} from '../../redux/contacts/selectors';\nimport Loader from '../Loader/Loader';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = () => {\n  const items = useSelector(selectItems);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filterValue = useSelector(selectFilter);\n  \n  const filteredContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul className={css.list}>\n        {filteredContacts.map(contact => {\n          const { id, name, number } = contact;\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      </ul>\n      {isLoading && <Loader />}\n      {error !== null && <b>Sorry, error 🙁: {error}</b>}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"message\":\"Filter_message__uDBzb\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {GetFilter} from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    dispatch(GetFilter(target.value));\n  };\n  return (\n    <>\n      <h2 className={css.title}>Contacts</h2>\n      <p className={css.message}>Find contacts by name</p>\n      <input\n        className={css.input}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"filter\"\n        value={useSelector(state => state.GetFilter)}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"name\":\"ContactForm_name__ZqciK\",\"button\":\"ContactForm_button__eSwX9\",\"input\":\"ContactForm_input__Bl93P\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectItems } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n\n  const addUser = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (items.find(contact => contact.name === name)) {\n      form.elements.name.value = '';\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(\n      addContact({\n        name: name,\n        number: number,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={addUser}>\n      <label className={css.name}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.name}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__s7EJR\"};","import ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  return (\n    <div className={css.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["name","number","id","dispatch","useDispatch","className","css","type","onClick","deleteContact","selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","useSelector","filterValue","filteredContacts","contact","toLowerCase","includes","useEffect","fetchContacts","map","onChange","target","GetFilter","value","pattern","title","required","onSubmit","e","preventDefault","form","currentTarget","elements","find","alert","addContact","reset"],"sourceRoot":""}